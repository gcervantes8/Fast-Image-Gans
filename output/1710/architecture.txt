Generator

Generator(
  (main): Sequential(
    (0): ConvTranspose2d(100, 512, kernel_size=(3, 3), stride=(1, 1))
    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): ConvTranspose2d(512, 256, kernel_size=(3, 4), stride=(2, 2), padding=(1, 1))
    (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): ConvTranspose2d(256, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU(inplace=True)
    (9): ConvTranspose2d(128, 64, kernel_size=(3, 4), stride=(2, 2), padding=(1, 1))
    (10): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): ReLU(inplace=True)
    (12): ConvTranspose2d(64, 32, kernel_size=(3, 4), stride=(2, 2), padding=(1, 1))
    (13): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): ReLU(inplace=True)
    (15): ConvTranspose2d(32, 3, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (16): Tanh()
  )
)------------------------------------------------------------------------------------------
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
├─Sequential: 1-1                        [-1, 3, 65, 87]           --
|    └─ConvTranspose2d: 2-1              [-1, 512, 3, 3]           461,312
|    └─BatchNorm2d: 2-2                  [-1, 512, 3, 3]           1,024
|    └─ReLU: 2-3                         [-1, 512, 3, 3]           --
|    └─ConvTranspose2d: 2-4              [-1, 256, 5, 6]           1,573,120
|    └─BatchNorm2d: 2-5                  [-1, 256, 5, 6]           512
|    └─ReLU: 2-6                         [-1, 256, 5, 6]           --
|    └─ConvTranspose2d: 2-7              [-1, 128, 9, 11]          295,040
|    └─BatchNorm2d: 2-8                  [-1, 128, 9, 11]          256
|    └─ReLU: 2-9                         [-1, 128, 9, 11]          --
|    └─ConvTranspose2d: 2-10             [-1, 64, 17, 22]          98,368
|    └─BatchNorm2d: 2-11                 [-1, 64, 17, 22]          128
|    └─ReLU: 2-12                        [-1, 64, 17, 22]          --
|    └─ConvTranspose2d: 2-13             [-1, 32, 33, 44]          24,608
|    └─BatchNorm2d: 2-14                 [-1, 32, 33, 44]          64
|    └─ReLU: 2-15                        [-1, 32, 33, 44]          --
|    └─ConvTranspose2d: 2-16             [-1, 3, 65, 87]           867
|    └─Tanh: 2-17                        [-1, 3, 65, 87]           --
==========================================================================================
Total params: 2,455,299
Trainable params: 2,455,299
Non-trainable params: 0
Total mult-adds (M): 4.91
------------------------------------------------------------------------------------------
Input size (MB): 0.00
Forward/backward pass size (MB): 1.58
Params size (MB): 9.37
Estimated Total Size (MB): 10.95
------------------------------------------------------------------------------------------

Discriminator

Discriminator(
  (main): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (1): LeakyReLU(negative_slope=0.1, inplace=True)
    (2): Conv2d(32, 64, kernel_size=(3, 4), stride=(2, 2), padding=(1, 1))
    (3): LeakyReLU(negative_slope=0.1, inplace=True)
    (4): Conv2d(64, 128, kernel_size=(3, 4), stride=(2, 2), padding=(1, 1))
    (5): LeakyReLU(negative_slope=0.1, inplace=True)
    (6): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (7): LeakyReLU(negative_slope=0.1, inplace=True)
    (8): Conv2d(256, 512, kernel_size=(3, 4), stride=(2, 2), padding=(1, 1))
    (9): LeakyReLU(negative_slope=0.1, inplace=True)
    (10): Conv2d(512, 1, kernel_size=(3, 3), stride=(1, 1))
    (11): Sigmoid()
  )
)------------------------------------------------------------------------------------------
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
├─Sequential: 1-1                        [-1, 1, 1, 1]             --
|    └─Conv2d: 2-1                       [-1, 32, 33, 44]          896
|    └─LeakyReLU: 2-2                    [-1, 32, 33, 44]          --
|    └─Conv2d: 2-3                       [-1, 64, 17, 22]          24,640
|    └─LeakyReLU: 2-4                    [-1, 64, 17, 22]          --
|    └─Conv2d: 2-5                       [-1, 128, 9, 11]          98,432
|    └─LeakyReLU: 2-6                    [-1, 128, 9, 11]          --
|    └─Conv2d: 2-7                       [-1, 256, 5, 6]           295,168
|    └─LeakyReLU: 2-8                    [-1, 256, 5, 6]           --
|    └─Conv2d: 2-9                       [-1, 512, 3, 3]           1,573,376
|    └─LeakyReLU: 2-10                   [-1, 512, 3, 3]           --
|    └─Conv2d: 2-11                      [-1, 1, 1, 1]             4,609
|    └─Sigmoid: 2-12                     [-1, 1, 1, 1]             --
==========================================================================================
Total params: 1,997,121
Trainable params: 1,997,121
Non-trainable params: 0
Total mult-adds (M): 3.99
------------------------------------------------------------------------------------------
Input size (MB): 0.06
Forward/backward pass size (MB): 0.73
Params size (MB): 7.62
Estimated Total Size (MB): 8.41
------------------------------------------------------------------------------------------