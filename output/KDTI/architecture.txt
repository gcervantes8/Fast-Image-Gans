Generator

Generator(
  (main): Sequential(
    (0): ConvTranspose2d(100, 512, kernel_size=(3, 4), stride=(1, 1))
    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): ConvTranspose2d(512, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU(inplace=True)
    (9): ConvTranspose2d(128, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (10): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): ReLU(inplace=True)
    (12): ConvTranspose2d(64, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (13): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): ReLU(inplace=True)
    (15): ConvTranspose2d(32, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (16): Tanh()
  )
)------------------------------------------------------------------------------------------
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
├─Sequential: 1-1                        [-1, 3, 96, 128]          --
|    └─ConvTranspose2d: 2-1              [-1, 512, 3, 4]           614,912
|    └─BatchNorm2d: 2-2                  [-1, 512, 3, 4]           1,024
|    └─ReLU: 2-3                         [-1, 512, 3, 4]           --
|    └─ConvTranspose2d: 2-4              [-1, 256, 6, 8]           2,097,408
|    └─BatchNorm2d: 2-5                  [-1, 256, 6, 8]           512
|    └─ReLU: 2-6                         [-1, 256, 6, 8]           --
|    └─ConvTranspose2d: 2-7              [-1, 128, 12, 16]         524,416
|    └─BatchNorm2d: 2-8                  [-1, 128, 12, 16]         256
|    └─ReLU: 2-9                         [-1, 128, 12, 16]         --
|    └─ConvTranspose2d: 2-10             [-1, 64, 24, 32]          131,136
|    └─BatchNorm2d: 2-11                 [-1, 64, 24, 32]          128
|    └─ReLU: 2-12                        [-1, 64, 24, 32]          --
|    └─ConvTranspose2d: 2-13             [-1, 32, 48, 64]          32,800
|    └─BatchNorm2d: 2-14                 [-1, 32, 48, 64]          64
|    └─ReLU: 2-15                        [-1, 32, 48, 64]          --
|    └─ConvTranspose2d: 2-16             [-1, 3, 96, 128]          1,539
|    └─Tanh: 2-17                        [-1, 3, 96, 128]          --
==========================================================================================
Total params: 3,404,195
Trainable params: 3,404,195
Non-trainable params: 0
Total mult-adds (M): 6.80
------------------------------------------------------------------------------------------
Input size (MB): 0.00
Forward/backward pass size (MB): 3.19
Params size (MB): 12.99
Estimated Total Size (MB): 16.17
------------------------------------------------------------------------------------------

Discriminator

Discriminator(
  (main): Sequential(
    (0): Conv2d(3, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (1): LeakyReLU(negative_slope=0.1, inplace=True)
    (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (3): LeakyReLU(negative_slope=0.1, inplace=True)
    (4): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (5): LeakyReLU(negative_slope=0.1, inplace=True)
    (6): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (7): LeakyReLU(negative_slope=0.1, inplace=True)
    (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (9): LeakyReLU(negative_slope=0.1, inplace=True)
    (10): Conv2d(512, 1, kernel_size=(3, 4), stride=(1, 1))
    (11): Sigmoid()
  )
)------------------------------------------------------------------------------------------
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
├─Sequential: 1-1                        [-1, 1, 1, 1]             --
|    └─Conv2d: 2-1                       [-1, 32, 48, 64]          1,568
|    └─LeakyReLU: 2-2                    [-1, 32, 48, 64]          --
|    └─Conv2d: 2-3                       [-1, 64, 24, 32]          32,832
|    └─LeakyReLU: 2-4                    [-1, 64, 24, 32]          --
|    └─Conv2d: 2-5                       [-1, 128, 12, 16]         131,200
|    └─LeakyReLU: 2-6                    [-1, 128, 12, 16]         --
|    └─Conv2d: 2-7                       [-1, 256, 6, 8]           524,544
|    └─LeakyReLU: 2-8                    [-1, 256, 6, 8]           --
|    └─Conv2d: 2-9                       [-1, 512, 3, 4]           2,097,664
|    └─LeakyReLU: 2-10                   [-1, 512, 3, 4]           --
|    └─Conv2d: 2-11                      [-1, 1, 1, 1]             6,145
|    └─Sigmoid: 2-12                     [-1, 1, 1, 1]             --
==========================================================================================
Total params: 2,793,953
Trainable params: 2,793,953
Non-trainable params: 0
Total mult-adds (M): 5.59
------------------------------------------------------------------------------------------
Input size (MB): 0.14
Forward/backward pass size (MB): 1.45
Params size (MB): 10.66
Estimated Total Size (MB): 12.25
------------------------------------------------------------------------------------------