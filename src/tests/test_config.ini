[MODEL]
# Each run will get it's own unique id and folder in the output directory
model_name = myFirstModel
models_dir = models

[DATA]
# Directory it will train the GAN with
train_dir = data/coil-100

# Aspect Ratio is base width : base height
# Upsample layer of 5, base_with 4, base_height 3 is an image of size 128 x 96
base_width = 4
base_height = 3

# Raising the upsample_layer will double the image height and width, and reducing by 1 will halve the image size
upsample_layers = 4

# Number of channels in the training images. For color images this is 3
num_channels = 3
batch_size = 256

# Number of workers for data-loader
workers = 1

[MACHINE]
# Number of GPUs available. Use 0 for CPU mode.
ngpu = 0

[TRAIN]
num_epochs = 1

# Loss function options: [hinge, mse, bce]
loss_function = bce

# Learning rates
generator_lr = 0.0002
discriminator_lr = 0.0002

# Beta1 hyper-param for Adam optimizers
beta1 = 0.5

[MODEL ARCHITECTURE]

# Options: [deep-biggan, biggan, dcgan]
model_type = dcgan

# Size of z latent vector (generator input)
latent_vector_size = 100

# Size of feature maps in generator
ngf = 16

# Size of feature maps in discriminator
ndf = 16

# Whether to use Exponential Moving Averages
generator_ema = False
ema_decay = 0.9999

# Orthogonal Regularization - Value of 0 will disable
orthogonal_value = 0

# Truncation Value - Value of 0 will disable
truncation_value = 0

[METRICS]
# Will run the metric every steps_to_eval amount of steps
steps_to_eval = 1000

# Will evaluate every epoch and use batch_size when computing
is_metric = False
fid_metric = False
